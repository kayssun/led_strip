#!/usr/bin/env ruby

require 'socket'
require 'bundler'
require 'ws_light/strip'
require 'ws_light/color'

require 'ws_light/config'

# Load config to overwrite default values
config = WSLight::Config.new.parse

def unregister_pins(pins)
  pins.each do |pin|
    File.open('/sys/class/gpio/unexport', 'w') { |f| f.write(pin.to_s) }
  end
end

# Trap ^C
Signal.trap('INT') do
  unregister_pins([config['pin_right'], config['pin_left']])
  exit
end

# Trap `kill `
Signal.trap('TERM') do
  unregister_pins([config['pin_right'], config['pin_left']])
  exit
end

strip = WSLight::Strip.new
strip.debug = config['debug']
if ARGV[0].to_i + ARGV[1].to_i + ARGV[2].to_i > 0
  strip.on_with_color(WSLight::Color.new(ARGV[0].to_i, ARGV[1].to_i, ARGV[2].to_i))
else
  strip.on(:direction_right)
end
sleep 1